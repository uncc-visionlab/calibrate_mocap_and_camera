# Contents of Makefile
#
# This Makefile is intended to allow one to develop ROS workspace C++ applications
# from the NetBeans Integrated Development Environment (IDE).
#
#
# Andrew Willis
# Senior NRC Research Associate
# July 1, 2015
#
# Some work to try and satisfy NetBeans LD_PRELOAD needs for 'libBuildTrace.so'
# "ERROR: ld.so: object 'libBuildTrace.so' from LD_PRELOAD cannot 
# be preloaded (cannot open shared object file): ignored."
# LD_PRELOAD=""
# LD_LIBRARY_PATH += ~/bin/netbeans-8.0.2/cnd/bin/Linux-x86_64/:~/bin/netbeans-8.0.2/cnd/bin/Linux-x86/
# The IDE use "interception" technology to configure code assistance. 
# You can turn off it in Project Properties->Code Assistance->Use Build 
# Analyzer (but it turns off a lot of "configuring code assistance" 
# functionality). 
# Another way to turn off interceptor (right unset) is unset 
# LD_LIBRARY_PATH and LD_PRELOAD on Linux and Solaris, DYLD_LIBRARY_PATH 
# and DYLD_INSERT_LIBRARIES on Mac in your script (compare with half unset 
# in your script). 

# path to the ROOT folder of the ROS install
ROS_ROOT=/opt/ros/indigo

# catkin_make/cmake ENVIRONMENT VARIABLE PARAMETERS (prefix command line with -D${ENVVAR})
SOURCE_DIRECTORY=src

CATKIN_DEVEL_PREFIX=devel
CMAKE_INSTALL_PREFIX=install

#CMAKE_VERBOSE_MAKEFILE=ON
#CMAKE_BUILD_TYPE=Release
#CMAKE_BUILD_TYPE=Development

# catkin_make command line options
CATKIN_MAKE_FLAGS=--source ./${SOURCE_DIRECTORY}
# to detect newly added packages in previously compiled workspace
#CATKIN_MAKE_FLAGS +=--force-cmake
ifeq ($(CMAKE_VERBOSE_MAKEFILE),ON)
    CATKIN_MAKE_FLAGS += -DCMAKE_VERBOSE_MAKEFILE=${CMAKE_VERBOSE_MAKEFILE}
endif

CMAKE_BUILD_FLAGS=../${SOURCE_DIRECTORY} \
    -DCMAKE_INSTALL_PREFIX=../${CMAKE_INSTALL_PREFIX} \
    -DCATKIN_DEVEL_PREFIX=../${CATKIN_DEVEL_PREFIX}

# setup the ROS environment variables -- equivalent to running 'source ${ROS_ROOT}/setup.sh'
IGNORE := $(shell bash -c "source ${ROS_ROOT}/setup.sh; env | sed 's/=/:=/' | sed 's/^/export /' > Makefile.ros_env")
include Makefile.ros_env

#.PHONY : ros_setup ws_setup ws_overlay build devel install all clean

all : build devel
#all: build install
.PHONY : all
	
build :
	#/usr/bin/env	
	/opt/ros/indigo/bin/catkin_make ${CATKIN_MAKE_FLAGS}
	$(MAKE) -C build
.PHONY : build

devel : build
	cd build; \
	cmake ${CMAKE_BUILD_FLAGS}

install : build 
	$(MAKE) -C build install    # equivalent to catkin_make install from workspace directory
	
clean :
#	/opt/ros/indigo/bin/catkin_make clean
	rm -rf build ${CATKIN_DEVEL_PREFIX} ${CMAKE_INSTALL_PREFIX} Makefile.ros_env Makefile.build_env

#ros_setup :
#	echo "Running target ros_setup"
#	IGNORE := $(shell bash -c "source ${ROS_ROOT}/setup.sh; env | sed 's/=/:=/' | sed 's/^/export /' > Makefile.ros_env")
#        include Makefile.ros_env

#ws_setup: 
# if src directory does not exist -> mkdir -p src
# if .catkin_workspace does not exist -> cd src; wstool init AND/OR catkin_init_workspace; cd ..
	
# invoke this to overlay the ROS packages of your workspace onto those from ROS_ROOT
#ws_overlay :
#	echo "Running target ws_overlay"
#	IGNORE := $(shell bash -c "source build/setup.sh; env | sed 's/=/:=/' | sed 's/^/export /' > Makefile.build_env")
#        include Makefile.build_env

#add_git_repository_to_proj:
#https://github.com/ipa320/softkinetic.git
#https://github.com/ros-drivers/openni2_launch.git
#	cd src; wstool set drivers/softkinetic --git https://github.com/ipa320/softkinetic.git
#	cd src; wstool set ${PACKAGE_REL_PATH} --git ${GIT_REPOSITORY_CLONE_URL}
#	cd src; wstool update

# in a separate terminal
# roscore
# from proj1 folder
# source devel/setup.bash
# roslaunch src/drivers/softkinetic/softkinetic_camera/launch/softkinetic_camera_demo.launch
